{
  "address": "0x21d288664453cd82aD09E64d9ea6eAB8e36Ceb4a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbeb04ef57c4742bf468c62eb4b880dd83932a9ddf1f508df40a938da71721688",
  "receipt": {
    "to": null,
    "from": "0x1136a05458d23a3852367C9A792032B32B313A0A",
    "contractAddress": "0x21d288664453cd82aD09E64d9ea6eAB8e36Ceb4a",
    "transactionIndex": 6,
    "gasUsed": "1078292",
    "logsBloom": "0x
    "blockHash": "0x8f802258a6be4170e87691f866b23057676ae016733e4b6969fb4578b9b68a24",
    "transactionHash": "0xbeb04ef57c4742bf468c62eb4b880dd83932a9ddf1f508df40a938da71721688",
    "logs": [],
    "blockNumber": 11134480,
    "cumulativeGasUsed": "2933742",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 4,
  "solcInputHash": "80bf2306c2a084d1db6004d9135239e7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Daniel Pisterzi\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract os a demo sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport './PriceConverter.sol';\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *   @author Daniel Pisterzi\\n *   @notice This contract os a demo sample funding contract\\n *   @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n\\t// Type Declarations\\n\\tusing PriceConverter for uint256; //imports all of its functions as well\\n\\n\\t// State Variables\\n\\taddress[] private s_funders;\\n\\tmapping(address => uint256) private s_addressToAmountFunded;\\n\\tuint256 public constant MINIMUM_USD = 10 * 1e18; //1e18 will match the eth amount later\\n\\taddress private immutable i_owner;\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\n\\t// Modifiers\\n\\tmodifier onlyOwner() {\\n\\t\\tif (msg.sender != i_owner) {\\n\\t\\t\\trevert FundMe__NotOwner();\\n\\t\\t} //must run this condition before the rest of the function\\n\\t\\t_; //represents completing the rest of the code\\n\\t}\\n\\n\\t// Functions\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ti_owner = msg.sender; //owner will be whoever deploys the contract\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress); //interact w/ chainlink contract this way\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfunction fund() public payable {\\n\\t\\t//1. Send ETH to the contract\\n\\t\\trequire(\\n\\t\\t\\tmsg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n\\t\\t\\t'Not enough ETH!'\\n\\t\\t);\\n\\t\\t//can use getConversionRate from the library;\\n\\t\\t//same as getConversionRate(msg.value, priceFeed); B/C msg.value... is auto-considered the first parameter of the function called from library\\n\\t\\ts_funders.push(msg.sender);\\n\\t\\ts_addressToAmountFunded[msg.sender] = msg.value; //set their address to 0\\n\\t}\\n\\n\\tfunction withdraw() public onlyOwner {\\n\\t\\tfor (uint256 i = 0; i < s_funders.length; i++) {\\n\\t\\t\\taddress funder = s_funders[i];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0; //set value of that funder to 0\\n\\t\\t}\\n\\t\\t//reset the array\\n\\t\\ts_funders = new address[](0); //creates a new array of 0 elements\\n\\t\\t//withdraw the funds through transfer - 3 methods\\n\\n\\t\\t//transfer\\n\\t\\tpayable(msg.sender).transfer(address(this).balance);\\n\\t\\t//send\\n\\t\\tbool sendSuccess = payable(msg.sender).send(address(this).balance);\\n\\t\\trequire(sendSuccess, 'Send failed');\\n\\t\\t//call\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}('');\\n\\t\\trequire(callSuccess, 'Call failed');\\n\\t}\\n\\n\\tfunction cheaperWithdraw() public payable onlyOwner {\\n\\t\\t// copy storage variable to memory so don't have to read storage each loop (Costs $$)\\n\\t\\taddress[] memory funders = s_funders;\\n\\t\\t// mappings can't be in memory\\n\\t\\tfor (uint256 i = 0; i < funders.length; i++) {\\n\\t\\t\\taddress funder = funders[i];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\ts_funders = new address[](0);\\n\\t\\t(bool success, ) = i_owner.call{value: address(this).balance}('');\\n\\t\\trequire(success);\\n\\t}\\n\\n\\t// View & Pure functions\\n\\tfunction getOwner() public view returns (address) {\\n\\t\\treturn i_owner;\\n\\t}\\n\\n\\tfunction getFunder(uint256 index) public view returns (address) {\\n\\t\\treturn s_funders[index];\\n\\t}\\n\\n\\tfunction getAddressToAmountFunded(address funder)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn s_addressToAmountFunded[funder];\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n}\\n\",\"keccak256\":\"0x126c1f236adc957dc58d55110b955241fb69abd53c8d54b7ac89185725753d07\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\n/**\\n * THIS EXAMPLE USES UN-AUDITED CODE.\\n * Network: Rinkeby\\n * Base: BTC/USD\\n * Base Address: 0xECe365B379E1dD183B20fc5f022230C044d51404\\n * Quote: EUR/USD\\n * Quote Address: 0x78F9e60608bF48a1155b4B2A5e31F32318a1d85F\\n * Decimals: 8 <-----SHOWS DECIMAL VALUE\\n */\\n\\nlibrary PriceConverter {\\n\\tfunction getEthPrice(AggregatorV3Interface priceFeed)\\n\\t\\tinternal\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t//interacting w/ external ChainLink contract - dynamic based on chain for the correct address\\n\\t\\t(, int256 price, , , ) = priceFeed.latestRoundData();\\n\\t\\t//outputs ETH price in USD up to 8 decimals in this case\\n\\t\\treturn uint256(price * 1e10); //price is 1e8; 1**10 will add the 10 more decimals needed to match msg.value, which = 1e18\\n\\t\\t//needed to wrap in uint() to also convert/match the msg.value type from INT => UINT\\n\\t}\\n\\n\\tfunction getConversionRate(\\n\\t\\tuint256 ethAmount,\\n\\t\\tAggregatorV3Interface priceFeed\\n\\t) internal view returns (uint256) {\\n\\t\\tuint256 ethPrice = getEthPrice(priceFeed);\\n\\t\\tuint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\t\\t//need to divide by 1e18 since it would otherwise return 1e36 decimals (due to multiplication).\\n\\t\\t//This returns whole Eth price w/o decimals. /1e16 would provide 2 more digits, but would need to add decimals later somehow\\n\\t\\treturn ethAmountInUsd;\\n\\t}\\n}\\n\",\"keccak256\":\"0x80e47872774141dd0ca719be3f6ae0017d7e73d622e14141376935bb692b8291\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013ad380380620013ad833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61122762000186600039600081816103310152818161064001528181610690015261088601526112276000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610b49565b6102e6565b6040516100cc9190610b8f565b60405180910390f35b3480156100e157600080fd5b506100ea61032f565b005b3480156100f857600080fd5b50610101610630565b60405161010e9190610b8f565b60405180910390f35b34801561012357600080fd5b5061012c61063c565b6040516101399190610bb9565b60405180910390f35b34801561014e57600080fd5b50610157610664565b6040516101649190610c33565b60405180910390f35b6101756101be565b005b61017f61068e565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610c7a565b61091c565b6040516101b59190610bb9565b60405180910390f35b678ac7230489e800006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096390919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610d04565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045f5760008082815481106103d9576103d8610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045790610d82565b9150506103b7565b50600067ffffffffffffffff81111561047b5761047a610dcb565b5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600090805190602001906104bf929190610a3f565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610506573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e46565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105a690610e97565b60006040518083038185875af1925050503d80600081146105e3576040519150601f19603f3d011682016040523d82523d6000602084013e6105e8565b606091505b505090508061062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390610ef8565b60405180910390fd5b5050565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610713576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561079657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074c575b5050505050905060005b81518110156108215760008282815181106107be576107bd610d24565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081990610d82565b9150506107a0565b50600067ffffffffffffffff81111561083d5761083c610dcb565b5b60405190808252806020026020018201604052801561086b5781602001602082028036833780820191505090505b5060009080519060200190610881929190610a3f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108c890610e97565b60006040518083038185875af1925050503d8060008114610905576040519150601f19603f3d011682016040523d82523d6000602084013e61090a565b606091505b505090508061091857600080fd5b5050565b600080828154811061093157610930610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096f8361099f565b90506000670de0b6b3a764000085836109889190610f18565b6109929190610fa1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a20919061105f565b5050509150506402540be40081610a3791906110da565b915050919050565b828054828255906000526020600020908101928215610ab8579160200282015b82811115610ab75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5f565b5b509050610ac59190610ac9565b5090565b5b80821115610ae2576000816000905550600101610aca565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1682610aeb565b9050919050565b610b2681610b0b565b8114610b3157600080fd5b50565b600081359050610b4381610b1d565b92915050565b600060208284031215610b5f57610b5e610ae6565b5b6000610b6d84828501610b34565b91505092915050565b6000819050919050565b610b8981610b76565b82525050565b6000602082019050610ba46000830184610b80565b92915050565b610bb381610b0b565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b6000819050919050565b6000610bf9610bf4610bef84610aeb565b610bd4565b610aeb565b9050919050565b6000610c0b82610bde565b9050919050565b6000610c1d82610c00565b9050919050565b610c2d81610c12565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610b76565b8114610c6257600080fd5b50565b600081359050610c7481610c4e565b92915050565b600060208284031215610c9057610c8f610ae6565b5b6000610c9e84828501610c65565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b6000610cee600f83610ca7565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d8d82610b76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc057610dbf610d53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e30600b83610ca7565b9150610e3b82610dfa565b602082019050919050565b60006020820190508181036000830152610e5f81610e23565b9050919050565b600081905092915050565b50565b6000610e81600083610e66565b9150610e8c82610e71565b600082019050919050565b6000610ea282610e74565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ee2600b83610ca7565b9150610eed82610eac565b602082019050919050565b60006020820190508181036000830152610f1181610ed5565b9050919050565b6000610f2382610b76565b9150610f2e83610b76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6757610f66610d53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fac82610b76565b9150610fb783610b76565b925082610fc757610fc6610f72565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ff181610fd2565b8114610ffc57600080fd5b50565b60008151905061100e81610fe8565b92915050565b6000819050919050565b61102781611014565b811461103257600080fd5b50565b6000815190506110448161101e565b92915050565b60008151905061105981610c4e565b92915050565b600080600080600060a0868803121561107b5761107a610ae6565b5b600061108988828901610fff565b955050602061109a88828901611035565b94505060406110ab8882890161104a565b93505060606110bc8882890161104a565b92505060806110cd88828901610fff565b9150509295509295909350565b60006110e582611014565b91506110f083611014565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112f5761112e610d53565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116c5761116b610d53565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a9576111a8610d53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e6576111e5610d53565b5b82820290509291505056fea2646970667358221220c54a0fce33559ddb114a591ba808bd0393cbfc678d9a5310aec8b958df8cae5c64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610b49565b6102e6565b6040516100cc9190610b8f565b60405180910390f35b3480156100e157600080fd5b506100ea61032f565b005b3480156100f857600080fd5b50610101610630565b60405161010e9190610b8f565b60405180910390f35b34801561012357600080fd5b5061012c61063c565b6040516101399190610bb9565b60405180910390f35b34801561014e57600080fd5b50610157610664565b6040516101649190610c33565b60405180910390f35b6101756101be565b005b61017f61068e565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610c7a565b61091c565b6040516101b59190610bb9565b60405180910390f35b678ac7230489e800006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096390919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610d04565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045f5760008082815481106103d9576103d8610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045790610d82565b9150506103b7565b50600067ffffffffffffffff81111561047b5761047a610dcb565b5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600090805190602001906104bf929190610a3f565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610506573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e46565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105a690610e97565b60006040518083038185875af1925050503d80600081146105e3576040519150601f19603f3d011682016040523d82523d6000602084013e6105e8565b606091505b505090508061062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390610ef8565b60405180910390fd5b5050565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610713576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561079657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074c575b5050505050905060005b81518110156108215760008282815181106107be576107bd610d24565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081990610d82565b9150506107a0565b50600067ffffffffffffffff81111561083d5761083c610dcb565b5b60405190808252806020026020018201604052801561086b5781602001602082028036833780820191505090505b5060009080519060200190610881929190610a3f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108c890610e97565b60006040518083038185875af1925050503d8060008114610905576040519150601f19603f3d011682016040523d82523d6000602084013e61090a565b606091505b505090508061091857600080fd5b5050565b600080828154811061093157610930610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096f8361099f565b90506000670de0b6b3a764000085836109889190610f18565b6109929190610fa1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a20919061105f565b5050509150506402540be40081610a3791906110da565b915050919050565b828054828255906000526020600020908101928215610ab8579160200282015b82811115610ab75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5f565b5b509050610ac59190610ac9565b5090565b5b80821115610ae2576000816000905550600101610aca565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1682610aeb565b9050919050565b610b2681610b0b565b8114610b3157600080fd5b50565b600081359050610b4381610b1d565b92915050565b600060208284031215610b5f57610b5e610ae6565b5b6000610b6d84828501610b34565b91505092915050565b6000819050919050565b610b8981610b76565b82525050565b6000602082019050610ba46000830184610b80565b92915050565b610bb381610b0b565b82525050565b6000602082019050610bce6000830184610baa565b92915050565b6000819050919050565b6000610bf9610bf4610bef84610aeb565b610bd4565b610aeb565b9050919050565b6000610c0b82610bde565b9050919050565b6000610c1d82610c00565b9050919050565b610c2d81610c12565b82525050565b6000602082019050610c486000830184610c24565b92915050565b610c5781610b76565b8114610c6257600080fd5b50565b600081359050610c7481610c4e565b92915050565b600060208284031215610c9057610c8f610ae6565b5b6000610c9e84828501610c65565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b6000610cee600f83610ca7565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d8d82610b76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc057610dbf610d53565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e30600b83610ca7565b9150610e3b82610dfa565b602082019050919050565b60006020820190508181036000830152610e5f81610e23565b9050919050565b600081905092915050565b50565b6000610e81600083610e66565b9150610e8c82610e71565b600082019050919050565b6000610ea282610e74565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ee2600b83610ca7565b9150610eed82610eac565b602082019050919050565b60006020820190508181036000830152610f1181610ed5565b9050919050565b6000610f2382610b76565b9150610f2e83610b76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6757610f66610d53565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fac82610b76565b9150610fb783610b76565b925082610fc757610fc6610f72565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ff181610fd2565b8114610ffc57600080fd5b50565b60008151905061100e81610fe8565b92915050565b6000819050919050565b61102781611014565b811461103257600080fd5b50565b6000815190506110448161101e565b92915050565b60008151905061105981610c4e565b92915050565b600080600080600060a0868803121561107b5761107a610ae6565b5b600061108988828901610fff565b955050602061109a88828901611035565b94505060406110ab8882890161104a565b93505060606110bc8882890161104a565b92505060806110cd88828901610fff565b9150509295509295909350565b60006110e582611014565b91506110f083611014565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112f5761112e610d53565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116c5761116b610d53565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a9576111a8610d53565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e6576111e5610d53565b5b82820290509291505056fea2646970667358221220c54a0fce33559ddb114a591ba808bd0393cbfc678d9a5310aec8b958df8cae5c64736f6c63430008080033",
  "devdoc": {
    "author": "Daniel Pisterzi",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract os a demo sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}