{
  "address": "0x360f0C7fB8fFAc69Aa763164fdF5cea419263817",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x043c9963ffd92b984c228d58dff915ad671814c4c47feae6972926a813c4eca7",
  "receipt": {
    "to": null,
    "from": "0x1136a05458d23a3852367C9A792032B32B313A0A",
    "contractAddress": "0x360f0C7fB8fFAc69Aa763164fdF5cea419263817",
    "transactionIndex": 7,
    "gasUsed": "919380",
    "logsBloom": "0x
    "blockHash": "0xc2e07da9b6fbe582f595a1c3b4e97326f55b7ab75947b19cdd0c569cabe888ed",
    "transactionHash": "0x043c9963ffd92b984c228d58dff915ad671814c4c47feae6972926a813c4eca7",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 27432019,
        "transactionHash": "0x043c9963ffd92b984c228d58dff915ad671814c4c47feae6972926a813c4eca7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000001136a05458d23a3852367c9a792032b32b313a0a",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000686002bf9843e40000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000213510c96365667581370000000000000000000000000000000000000000000000000d7856b0e7cbbc1c0000000000000000000000000000000000000000000021351131c368260dc51b",
        "logIndex": 18,
        "blockHash": "0xc2e07da9b6fbe582f595a1c3b4e97326f55b7ab75947b19cdd0c569cabe888ed"
      }
    ],
    "blockNumber": 27432019,
    "cumulativeGasUsed": "2227394",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF9680D99D6C9589e2a93a78A04A279e509205945"
  ],
  "numDeployments": 1,
  "solcInputHash": "f9b6582b545ade854c138e258211fcd1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundeMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundeMe {\\n    using PriceConverter for uint; //imports all of its functions as well\\n\\n    uint public constant MINIMUM_USD = 10 * 1e18; //1e18 will match the eth amount later\\n\\n    address[] public funders;\\n    mapping(address => uint) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender; //owner will be whoever deploys the contract\\n        priceFeed = AggregatorV3Interface(priceFeedAddress); //interact w/ chainlink contract this way\\n    }\\n\\n    function fund() public payable {\\n        //1. Send ETH to the contract\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Not enough ETH!\\\"); \\n        //can use getConversionRate from the library; \\n        //same as getConversionRate(msg.value, priceFeed); B/C msg.value... is auto-considered the first parameter of the function called from library\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value; //set their address to 0\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for(uint i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0; //set value of that funder to 0\\n        }\\n        //reset the array\\n        funders = new address[](0); //creates a new array of 0 elements\\n        //withdraw the funds through transfer - 3 methods\\n\\n        //transfer\\n        payable(msg.sender).transfer(address(this).balance); \\n        //send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed\\\");\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    //modifier is a KW you can add directly in function\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\"); //use if statement instead to save gas\\n        if(msg.sender != i_owner) { revert NotOwner(); } //must run this condition before the rest of the function\\n        _; //represents completing the rest of the code\\n    }\\n    receive() external payable {\\n        fund();\\n    }\\n    fallback() external payable {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x6b628bffc3c02357afdb59a72c0ee531d5a06bd859c499c87a75684b09815ed2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n/**\\n * THIS EXAMPLE USES UN-AUDITED CODE.\\n * Network: Rinkeby\\n * Base: BTC/USD\\n * Base Address: 0xECe365B379E1dD183B20fc5f022230C044d51404\\n * Quote: EUR/USD\\n * Quote Address: 0x78F9e60608bF48a1155b4B2A5e31F32318a1d85F\\n * Decimals: 8 <-----SHOWS DECIMAL VALUE\\n */\\n\\nlibrary PriceConverter {\\n    \\n    function getEthPrice(AggregatorV3Interface priceFeed) internal view returns(uint) {\\n        //interacting w/ external ChainLink contract - dynamic based on chain for the correct address\\n        (, int price,,,) = priceFeed.latestRoundData();\\n        //outputs ETH price in USD up to 8 decimals in this case\\n        return uint(price * 1e10); //price is 1e8; 1**10 will add the 10 more decimals needed to match msg.value, which = 1e18\\n        //needed to wrap in uint() to also convert/match the msg.value type from INT => UINT\\n    }\\n\\n    function getConversionRate(uint ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint) {\\n        uint ethPrice = getEthPrice(priceFeed);\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18; \\n        //need to divide by 1e18 since it would otherwise return 1e36 decimals (due to multiplication). \\n        //This returns whole Eth price w/o decimals. /1e16 would provide 2 more digits, but would need to add decimals later somehow\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x5c14abc2d2e065cfd425f6e5b1a454221a5565241b448be5ad22ad805b0087ed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010bb380380620010bb833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f4362000178600039600081816102d3015261061e0152610f436000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610865565b6105d2565b6040516100d891906108ab565b60405180910390f35b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108ab565b60405180910390f35b34801561011857600080fd5b506101216105f6565b60405161012e9190610925565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061c565b604051610163919061094f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610996565b610640565b6040516101a0919061094f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067f90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a20565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a610a40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f990610a9e565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610ae7565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061075b565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a8573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b62565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054890610bb3565b60006040518083038185875af1925050503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b50509050806105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610c14565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061065057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068b836106bb565b90506000670de0b6b3a764000085836106a49190610c34565b6106ae9190610cbd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070457600080fd5b505afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190610d7b565b5050509150506402540be400816107539190610df6565b915050919050565b8280548282559060005260206000209081019282156107d4579160200282015b828111156107d35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077b565b5b5090506107e191906107e5565b5090565b5b808211156107fe5760008160009055506001016107e6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083282610807565b9050919050565b61084281610827565b811461084d57600080fd5b50565b60008135905061085f81610839565b92915050565b60006020828403121561087b5761087a610802565b5b600061088984828501610850565b91505092915050565b6000819050919050565b6108a581610892565b82525050565b60006020820190506108c0600083018461089c565b92915050565b6000819050919050565b60006108eb6108e66108e184610807565b6108c6565b610807565b9050919050565b60006108fd826108d0565b9050919050565b600061090f826108f2565b9050919050565b61091f81610904565b82525050565b600060208201905061093a6000830184610916565b92915050565b61094981610827565b82525050565b60006020820190506109646000830184610940565b92915050565b61097381610892565b811461097e57600080fd5b50565b6000813590506109908161096a565b92915050565b6000602082840312156109ac576109ab610802565b5b60006109ba84828501610981565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b6000610a0a600f836109c3565b9150610a15826109d4565b602082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa982610892565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adc57610adb610a6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4c600b836109c3565b9150610b5782610b16565b602082019050919050565b60006020820190508181036000830152610b7b81610b3f565b9050919050565b600081905092915050565b50565b6000610b9d600083610b82565b9150610ba882610b8d565b600082019050919050565b6000610bbe82610b90565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfe600b836109c3565b9150610c0982610bc8565b602082019050919050565b60006020820190508181036000830152610c2d81610bf1565b9050919050565b6000610c3f82610892565b9150610c4a83610892565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8357610c82610a6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc882610892565b9150610cd383610892565b925082610ce357610ce2610c8e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0d81610cee565b8114610d1857600080fd5b50565b600081519050610d2a81610d04565b92915050565b6000819050919050565b610d4381610d30565b8114610d4e57600080fd5b50565b600081519050610d6081610d3a565b92915050565b600081519050610d758161096a565b92915050565b600080600080600060a08688031215610d9757610d96610802565b5b6000610da588828901610d1b565b9550506020610db688828901610d51565b9450506040610dc788828901610d66565b9350506060610dd888828901610d66565b9250506080610de988828901610d1b565b9150509295509295909350565b6000610e0182610d30565b9150610e0c83610d30565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4b57610e4a610a6f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8857610e87610a6f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec557610ec4610a6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0257610f01610a6f565b5b82820290509291505056fea26469706673582212205ed2d675c75e3fd364f377735a62c3f999ba6488b560979ef4bd573604de8aa464736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610865565b6105d2565b6040516100d891906108ab565b60405180910390f35b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108ab565b60405180910390f35b34801561011857600080fd5b506101216105f6565b60405161012e9190610925565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061c565b604051610163919061094f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610996565b610640565b6040516101a0919061094f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067f90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a20565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a610a40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f990610a9e565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610ae7565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061075b565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a8573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b62565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161054890610bb3565b60006040518083038185875af1925050503d8060008114610585576040519150601f19603f3d011682016040523d82523d6000602084013e61058a565b606091505b50509050806105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610c14565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061065057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068b836106bb565b90506000670de0b6b3a764000085836106a49190610c34565b6106ae9190610cbd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070457600080fd5b505afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190610d7b565b5050509150506402540be400816107539190610df6565b915050919050565b8280548282559060005260206000209081019282156107d4579160200282015b828111156107d35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077b565b5b5090506107e191906107e5565b5090565b5b808211156107fe5760008160009055506001016107e6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083282610807565b9050919050565b61084281610827565b811461084d57600080fd5b50565b60008135905061085f81610839565b92915050565b60006020828403121561087b5761087a610802565b5b600061088984828501610850565b91505092915050565b6000819050919050565b6108a581610892565b82525050565b60006020820190506108c0600083018461089c565b92915050565b6000819050919050565b60006108eb6108e66108e184610807565b6108c6565b610807565b9050919050565b60006108fd826108d0565b9050919050565b600061090f826108f2565b9050919050565b61091f81610904565b82525050565b600060208201905061093a6000830184610916565b92915050565b61094981610827565b82525050565b60006020820190506109646000830184610940565b92915050565b61097381610892565b811461097e57600080fd5b50565b6000813590506109908161096a565b92915050565b6000602082840312156109ac576109ab610802565b5b60006109ba84828501610981565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b6000610a0a600f836109c3565b9150610a15826109d4565b602082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa982610892565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adc57610adb610a6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4c600b836109c3565b9150610b5782610b16565b602082019050919050565b60006020820190508181036000830152610b7b81610b3f565b9050919050565b600081905092915050565b50565b6000610b9d600083610b82565b9150610ba882610b8d565b600082019050919050565b6000610bbe82610b90565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfe600b836109c3565b9150610c0982610bc8565b602082019050919050565b60006020820190508181036000830152610c2d81610bf1565b9050919050565b6000610c3f82610892565b9150610c4a83610892565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8357610c82610a6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc882610892565b9150610cd383610892565b925082610ce357610ce2610c8e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0d81610cee565b8114610d1857600080fd5b50565b600081519050610d2a81610d04565b92915050565b6000819050919050565b610d4381610d30565b8114610d4e57600080fd5b50565b600081519050610d6081610d3a565b92915050565b600081519050610d758161096a565b92915050565b600080600080600060a08688031215610d9757610d96610802565b5b6000610da588828901610d1b565b9550506020610db688828901610d51565b9450506040610dc788828901610d66565b9350506060610dd888828901610d66565b9250506080610de988828901610d1b565b9150509295509295909350565b6000610e0182610d30565b9150610e0c83610d30565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4b57610e4a610a6f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8857610e87610a6f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec557610ec4610a6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0257610f01610a6f565b5b82820290509291505056fea26469706673582212205ed2d675c75e3fd364f377735a62c3f999ba6488b560979ef4bd573604de8aa464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundeMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundeMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundeMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}